// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'response', 'handlebars', 'text!../template/response.handlebars'], function(Backbone, Response, Handlebars, ResponseTemplate) {
    var ResponseView;
    return ResponseView = (function(_super) {

      __extends(ResponseView, _super);

      function ResponseView() {
        return ResponseView.__super__.constructor.apply(this, arguments);
      }

      ResponseView.prototype.tagName = "tr";

      ResponseView.prototype.model = Response;

      ResponseView.prototype.template = Handlebars.compile(ResponseTemplate);

      ResponseView.prototype.events = {
        "click .response-available": "setStatusAvailable",
        "click .response-unavailable": "setStatusUnavailable",
        "click .response-unsure": "setStatusUnsure",
        "click .response-delete": "clear"
      };

      ResponseView.prototype.initialize = function() {
        return this.render();
      };

      ResponseView.prototype.render = function() {
        console.log("Rendering ResponseView");
        this.$el.html(this.template(this.model.toJSON()));
        return this.$el.addClass(this.model.get("statusClass"));
      };

      ResponseView.prototype.clear = function() {
        return this.remove();
      };

      ResponseView.prototype.setStatus = function(to) {
        return this.model.set("status", to);
      };

      ResponseView.prototype.setStatusAvailable = function() {
        this.setStatus(2);
        this.model.set("statusClass", "success");
        return this.model.collection.sort();
      };

      ResponseView.prototype.setStatusUnavailable = function() {
        this.setStatus(4);
        this.model.set("statusClass", "error");
        return this.model.collection.sort();
      };

      ResponseView.prototype.setStatusUnsure = function() {
        this.setStatus(3);
        this.model.set("statusClass", "caution");
        return this.model.collection.sort();
      };

      ResponseView.prototype.remove = function() {
        this.undelegateEvents();
        return ResponseView.__super__.remove.apply(this, arguments);
      };

      return ResponseView;

    })(Backbone.View);
  });

}).call(this);
